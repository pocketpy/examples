{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,E,E,E,O,C,O,I,G,E,E,O,C,W,I,ECAA;;;;;+EAK+E,EAI/E,IAAI,EAAO,CACT,SAAU,CACR,YAAa,KACb,aAAc,CAAC,KAAM,KAAK,AAC5B,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,AACH,EACI,EAAW,CACb,aAAc,GACd,aAAc,eACd,SAAU,CACR,UACA,WACA,UACA,QACA,SACA,MACA,SACA,UACA,SACA,SACA,SACA,QACA,WACA,UACA,OACA,kBACA,aACA,WACA,WACA,aACA,YACA,YACA,UACA,YACA,cACA,aACA,SACA,OACA,OACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,OACA,WACA,UACA,KACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,MACA,OACA,KACA,KACA,MACA,KACA,QACA,MACA,OACA,MACA,YACA,OACA,SACA,MACA,UACA,SACA,YACA,YACA,WACA,WACA,SACA,MACA,OACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,OACA,OACA,QACA,WACA,WACA,OACA,QACD,CACD,QAAS,YACT,QAAS,aACT,UAAW,CACT,KAAM,CACJ,CAAE,QAAS,WAAY,EACvB,CAAE,QAAS,aAAc,EACzB,CAAE,QAAS,UAAW,EACtB,CAAE,QAAS,UAAW,EACtB,CAAC,QAAS,YAAY,CACtB,CAAC,eAAgB,YAAY,CAC7B,CACE,gBACA,CACE,MAAO,CACL,YAAa,UACb,WAAY,YACd,CACF,EACD,CACD,CAAC,mDAAoD,WAAW,CACjE,CACD,WAAY,CAAC,CAAC,MAAO,QAAQ,CAAC,CAC9B,SAAU,CACR,CAAC,SAAU,UAAW,WAAW,CACjC,CAAC,YAAa,UAAU,CACzB,CACD,QAAS,CACP,CAAC,SAAU,UAAW,OAAO,CAC7B,CAAC,IAAK,UAAU,CACjB,CACD,QAAS,CACP,CAAC,oCAAqC,aAAa,CACnD,CACE,oDACA,CACE,MAAO,CACL,SAAU,SACV,GAAI,cACN,CACF,EACD,CACF,CAED,QAAS,CACP,CAAC,KAAM,gBAAiB,UAAU,CAClC,CAAC,IAAK,gBAAiB,cAAc,CACrC,CAAC,KAAM,gBAAiB,UAAU,CAClC,CAAC,IAAK,gBAAiB,iBAAiB,CACzC,CACD,WAAY,CACV,CAAC,WAAY,SAAU,UAAU,CACjC,CAAC,UAAW,SAAS,CACrB,CAAC,MAAO,SAAS,CACjB,CAAC,IAAK,gBAAiB,UAAU,CACjC,CAAC,MAAO,SAAS,CAClB,CACD,cAAe,CACb,CAAC,WAAY,SAAU,UAAU,CACjC,CAAC,UAAW,SAAS,CACrB,CAAC,MAAO,SAAS,CACjB,CAAC,IAAK,gBAAiB,UAAU,CACjC,CAAC,MAAO,SAAS,CAClB,AACH,CACF,C","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8oxSN\", function(module, exports) {\n\n$parcel$export(module.exports, \"conf\", () => $61cad90e34600ae4$export$c83be1687c028fc9);\n$parcel$export(module.exports, \"language\", () => $61cad90e34600ae4$export$789c912f57fe164c);\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/objective-c/objective-c.ts\nvar $61cad90e34600ae4$export$c83be1687c028fc9 = {\n    comments: {\n        lineComment: \"//\",\n        blockComment: [\n            \"/*\",\n            \"*/\"\n        ]\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        }\n    ]\n};\nvar $61cad90e34600ae4$export$789c912f57fe164c = {\n    defaultToken: \"\",\n    tokenPostfix: \".objective-c\",\n    keywords: [\n        \"#import\",\n        \"#include\",\n        \"#define\",\n        \"#else\",\n        \"#endif\",\n        \"#if\",\n        \"#ifdef\",\n        \"#ifndef\",\n        \"#ident\",\n        \"#undef\",\n        \"@class\",\n        \"@defs\",\n        \"@dynamic\",\n        \"@encode\",\n        \"@end\",\n        \"@implementation\",\n        \"@interface\",\n        \"@package\",\n        \"@private\",\n        \"@protected\",\n        \"@property\",\n        \"@protocol\",\n        \"@public\",\n        \"@selector\",\n        \"@synthesize\",\n        \"__declspec\",\n        \"assign\",\n        \"auto\",\n        \"BOOL\",\n        \"break\",\n        \"bycopy\",\n        \"byref\",\n        \"case\",\n        \"char\",\n        \"Class\",\n        \"const\",\n        \"copy\",\n        \"continue\",\n        \"default\",\n        \"do\",\n        \"double\",\n        \"else\",\n        \"enum\",\n        \"extern\",\n        \"FALSE\",\n        \"false\",\n        \"float\",\n        \"for\",\n        \"goto\",\n        \"if\",\n        \"in\",\n        \"int\",\n        \"id\",\n        \"inout\",\n        \"IMP\",\n        \"long\",\n        \"nil\",\n        \"nonatomic\",\n        \"NULL\",\n        \"oneway\",\n        \"out\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"readwrite\",\n        \"readonly\",\n        \"register\",\n        \"return\",\n        \"SEL\",\n        \"self\",\n        \"short\",\n        \"signed\",\n        \"sizeof\",\n        \"static\",\n        \"struct\",\n        \"super\",\n        \"switch\",\n        \"typedef\",\n        \"TRUE\",\n        \"true\",\n        \"union\",\n        \"unsigned\",\n        \"volatile\",\n        \"void\",\n        \"while\"\n    ],\n    decpart: /\\d(_?\\d)*/,\n    decimal: /0|@decpart/,\n    tokenizer: {\n        root: [\n            {\n                include: \"@comments\"\n            },\n            {\n                include: \"@whitespace\"\n            },\n            {\n                include: \"@numbers\"\n            },\n            {\n                include: \"@strings\"\n            },\n            [\n                /[,:;]/,\n                \"delimiter\"\n            ],\n            [\n                /[{}\\[\\]()<>]/,\n                \"@brackets\"\n            ],\n            [\n                /[a-zA-Z@#]\\w*/,\n                {\n                    cases: {\n                        \"@keywords\": \"keyword\",\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ],\n            [\n                /[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/,\n                \"operator\"\n            ]\n        ],\n        whitespace: [\n            [\n                /\\s+/,\n                \"white\"\n            ]\n        ],\n        comments: [\n            [\n                \"\\\\/\\\\*\",\n                \"comment\",\n                \"@comment\"\n            ],\n            [\n                \"\\\\/\\\\/+.*\",\n                \"comment\"\n            ]\n        ],\n        comment: [\n            [\n                \"\\\\*\\\\/\",\n                \"comment\",\n                \"@pop\"\n            ],\n            [\n                \".\",\n                \"comment\"\n            ]\n        ],\n        numbers: [\n            [\n                /0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/,\n                \"number.hex\"\n            ],\n            [\n                /@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/,\n                {\n                    cases: {\n                        \"(\\\\d)*\": \"number\",\n                        $0: \"number.float\"\n                    }\n                }\n            ]\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [\n                /'$/,\n                \"string.escape\",\n                \"@popall\"\n            ],\n            [\n                /'/,\n                \"string.escape\",\n                \"@stringBody\"\n            ],\n            [\n                /\"$/,\n                \"string.escape\",\n                \"@popall\"\n            ],\n            [\n                /\"/,\n                \"string.escape\",\n                \"@dblStringBody\"\n            ]\n        ],\n        stringBody: [\n            [\n                /[^\\\\']+$/,\n                \"string\",\n                \"@popall\"\n            ],\n            [\n                /[^\\\\']+/,\n                \"string\"\n            ],\n            [\n                /\\\\./,\n                \"string\"\n            ],\n            [\n                /'/,\n                \"string.escape\",\n                \"@popall\"\n            ],\n            [\n                /\\\\$/,\n                \"string\"\n            ]\n        ],\n        dblStringBody: [\n            [\n                /[^\\\\\"]+$/,\n                \"string\",\n                \"@popall\"\n            ],\n            [\n                /[^\\\\\"]+/,\n                \"string\"\n            ],\n            [\n                /\\\\./,\n                \"string\"\n            ],\n            [\n                /\"/,\n                \"string.escape\",\n                \"@popall\"\n            ],\n            [\n                /\\\\$/,\n                \"string\"\n            ]\n        ]\n    }\n};\n\n});\n\n\n//# sourceMappingURL=objective-c.7ce011ea.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/objective-c/objective-c.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".objective-c\",\n  keywords: [\n    \"#import\",\n    \"#include\",\n    \"#define\",\n    \"#else\",\n    \"#endif\",\n    \"#if\",\n    \"#ifdef\",\n    \"#ifndef\",\n    \"#ident\",\n    \"#undef\",\n    \"@class\",\n    \"@defs\",\n    \"@dynamic\",\n    \"@encode\",\n    \"@end\",\n    \"@implementation\",\n    \"@interface\",\n    \"@package\",\n    \"@private\",\n    \"@protected\",\n    \"@property\",\n    \"@protocol\",\n    \"@public\",\n    \"@selector\",\n    \"@synthesize\",\n    \"__declspec\",\n    \"assign\",\n    \"auto\",\n    \"BOOL\",\n    \"break\",\n    \"bycopy\",\n    \"byref\",\n    \"case\",\n    \"char\",\n    \"Class\",\n    \"const\",\n    \"copy\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"double\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"FALSE\",\n    \"false\",\n    \"float\",\n    \"for\",\n    \"goto\",\n    \"if\",\n    \"in\",\n    \"int\",\n    \"id\",\n    \"inout\",\n    \"IMP\",\n    \"long\",\n    \"nil\",\n    \"nonatomic\",\n    \"NULL\",\n    \"oneway\",\n    \"out\",\n    \"private\",\n    \"public\",\n    \"protected\",\n    \"readwrite\",\n    \"readonly\",\n    \"register\",\n    \"return\",\n    \"SEL\",\n    \"self\",\n    \"short\",\n    \"signed\",\n    \"sizeof\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"switch\",\n    \"typedef\",\n    \"TRUE\",\n    \"true\",\n    \"union\",\n    \"unsigned\",\n    \"volatile\",\n    \"void\",\n    \"while\"\n  ],\n  decpart: /\\d(_?\\d)*/,\n  decimal: /0|@decpart/,\n  tokenizer: {\n    root: [\n      { include: \"@comments\" },\n      { include: \"@whitespace\" },\n      { include: \"@numbers\" },\n      { include: \"@strings\" },\n      [/[,:;]/, \"delimiter\"],\n      [/[{}\\[\\]()<>]/, \"@brackets\"],\n      [\n        /[a-zA-Z@#]\\w*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, \"operator\"]\n    ],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n      [\"\\\\/\\\\/+.*\", \"comment\"]\n    ],\n    comment: [\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n      [\".\", \"comment\"]\n    ],\n    numbers: [\n      [/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, \"number.hex\"],\n      [\n        /@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/,\n        {\n          cases: {\n            \"(\\\\d)*\": \"number\",\n            $0: \"number.float\"\n          }\n        }\n      ]\n    ],\n    // Recognize strings, including those broken across lines with \\ (but not without)\n    strings: [\n      [/'$/, \"string.escape\", \"@popall\"],\n      [/'/, \"string.escape\", \"@stringBody\"],\n      [/\"$/, \"string.escape\", \"@popall\"],\n      [/\"/, \"string.escape\", \"@dblStringBody\"]\n    ],\n    stringBody: [\n      [/[^\\\\']+$/, \"string\", \"@popall\"],\n      [/[^\\\\']+/, \"string\"],\n      [/\\\\./, \"string\"],\n      [/'/, \"string.escape\", \"@popall\"],\n      [/\\\\$/, \"string\"]\n    ],\n    dblStringBody: [\n      [/[^\\\\\"]+$/, \"string\", \"@popall\"],\n      [/[^\\\\\"]+/, \"string\"],\n      [/\\\\./, \"string\"],\n      [/\"/, \"string.escape\", \"@popall\"],\n      [/\\\\$/, \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRegister","parcelRequire","$parcel$global","globalThis","register","module","exports","$61cad90e34600ae4$export$c83be1687c028fc9","$61cad90e34600ae4$export$789c912f57fe164c","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","keywords","decpart","decimal","tokenizer","root","include","cases","whitespace","comment","numbers","$0","strings","stringBody","dblStringBody"],"version":3,"file":"objective-c.7ce011ea.js.map"}