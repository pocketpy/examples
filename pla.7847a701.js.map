{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,E,E,E,O,C,O,I,G,E,E,O,C,W,I,ECAA;;;;;+EAK+E,EAI/E,IAAI,EAAO,CACT,SAAU,CACR,YAAa,GACf,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,AACH,EACI,EAAW,CACb,aAAc,GACd,aAAc,OACd,SAAU,CACR,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,kBAAmB,EACnD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,iBAAkB,EAClD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,uBAAwB,EACzD,CACD,SAAU,CACR,KACA,KACA,MACA,OACA,MACA,SACA,QACA,SACA,QACA,YACA,mBACA,QACA,KACA,KACA,OACD,CAED,QAAS,OACT,WAAY,2BACZ,WAAY,aAEZ,UAAW,CACT,KAAM,CAEJ,CAAE,QAAS,aAAc,EACzB,CAAC,WAAY,UAAU,CAEvB,CACE,mBACA,CACE,MAAO,CACL,OAAQ,CAAE,MAAO,YAAa,EAC9B,YAAa,CACX,MAAO,CACL,QAAS,CAAE,MAAO,aAAc,KAAM,OAAQ,EAC9C,WAAY,CAAE,MAAO,aAAc,KAAM,aAAc,CACzD,CACF,EACA,WAAY,CAAE,MAAO,YAAa,CACpC,CACF,EACD,CAED,CAAC,cAAe,aAAa,CAE7B,CAAC,cAAe,SAAS,CAC1B,CACD,WAAY,CAAC,CAAC,aAAc,GAAG,CAAC,CAChC,KAAM,CAAC,CAAE,QAAS,aAAc,EAAG,CAAC,MAAO,CAAE,MAAO,OAAQ,KAAM,MAAO,EAAE,CAAC,CAC5E,WAAY,CAEV,CACE,aACA,CACE,MAAO,CACL,OAAQ,CAAE,MAAO,GAAI,KAAM,MAAO,EAClC,WAAY,EACd,CACF,EACD,CAED,CAAC,WAAY,UAAW,OAAO,CAE/B,CACE,aACA,CACE,MAAO,CACL,OAAQ,CAAE,MAAO,YAAa,KAAM,MAAO,EAC3C,WAAY,WACd,CACF,EACD,CAED,CACE,SACA,CACE,MAAO,CACL,OAAQ,CAAE,MAAO,SAAU,KAAM,MAAO,EACxC,WAAY,QACd,CACF,EACD,CAED,CACE,cACA,CACE,MAAO,CACL,OAAQ,CAAE,MAAO,aAAc,KAAM,MAAO,EAC5C,WAAY,YACd,CACF,EACD,CAED,CACE,OACA,CACE,MAAO,CACL,OAAQ,CAAE,MAAO,YAAa,KAAM,MAAO,EAC3C,WAAY,WACd,CACF,EACD,CACF,AACH,CACF,C","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/pla/pla.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"4Dmmz\", function(module, exports) {\n\n$parcel$export(module.exports, \"conf\", () => $35fc26c24cf3b04e$export$c83be1687c028fc9);\n$parcel$export(module.exports, \"language\", () => $35fc26c24cf3b04e$export$789c912f57fe164c);\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/pla/pla.ts\nvar $35fc26c24cf3b04e$export$c83be1687c028fc9 = {\n    comments: {\n        lineComment: \"#\"\n    },\n    brackets: [\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"<\",\n            \">\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"<\",\n            close: \">\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"<\",\n            close: \">\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        }\n    ]\n};\nvar $35fc26c24cf3b04e$export$789c912f57fe164c = {\n    defaultToken: \"\",\n    tokenPostfix: \".pla\",\n    brackets: [\n        {\n            open: \"[\",\n            close: \"]\",\n            token: \"delimiter.square\"\n        },\n        {\n            open: \"<\",\n            close: \">\",\n            token: \"delimiter.angle\"\n        },\n        {\n            open: \"(\",\n            close: \")\",\n            token: \"delimiter.parenthesis\"\n        }\n    ],\n    keywords: [\n        \".i\",\n        \".o\",\n        \".mv\",\n        \".ilb\",\n        \".ob\",\n        \".label\",\n        \".type\",\n        \".phase\",\n        \".pair\",\n        \".symbolic\",\n        \".symbolic-output\",\n        \".kiss\",\n        \".p\",\n        \".e\",\n        \".end\"\n    ],\n    // regular expressions\n    comment: /#.*$/,\n    identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n    plaContent: /[01\\-~\\|]+/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // comments and whitespace\n            {\n                include: \"@whitespace\"\n            },\n            [\n                /@comment/,\n                \"comment\"\n            ],\n            // keyword\n            [\n                /\\.([a-zA-Z_\\-]+)/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"keyword.$1\"\n                        },\n                        \"@keywords\": {\n                            cases: {\n                                \".type\": {\n                                    token: \"keyword.$1\",\n                                    next: \"@type\"\n                                },\n                                \"@default\": {\n                                    token: \"keyword.$1\",\n                                    next: \"@keywordArg\"\n                                }\n                            }\n                        },\n                        \"@default\": {\n                            token: \"keyword.$1\"\n                        }\n                    }\n                }\n            ],\n            // identifiers\n            [\n                /@identifier/,\n                \"identifier\"\n            ],\n            // PLA row\n            [\n                /@plaContent/,\n                \"string\"\n            ]\n        ],\n        whitespace: [\n            [\n                /[ \\t\\r\\n]+/,\n                \"\"\n            ]\n        ],\n        type: [\n            {\n                include: \"@whitespace\"\n            },\n            [\n                /\\w+/,\n                {\n                    token: \"type\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        keywordArg: [\n            // whitespace\n            [\n                /[ \\t\\r\\n]+/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"\"\n                    }\n                }\n            ],\n            // comments\n            [\n                /@comment/,\n                \"comment\",\n                \"@pop\"\n            ],\n            // brackets\n            [\n                /[<>()\\[\\]]/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"@brackets\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"@brackets\"\n                    }\n                }\n            ],\n            // numbers\n            [\n                /\\-?\\d+/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"number\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"number\"\n                    }\n                }\n            ],\n            // identifiers\n            [\n                /@identifier/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"identifier\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ],\n            // delimiter\n            [\n                /[;=]/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"delimiter\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"delimiter\"\n                    }\n                }\n            ]\n        ]\n    }\n};\n\n});\n\n\n//# sourceMappingURL=pla.7847a701.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/pla/pla.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"[\", \"]\"],\n    [\"<\", \">\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ],\n  surroundingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pla\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  keywords: [\n    \".i\",\n    \".o\",\n    \".mv\",\n    \".ilb\",\n    \".ob\",\n    \".label\",\n    \".type\",\n    \".phase\",\n    \".pair\",\n    \".symbolic\",\n    \".symbolic-output\",\n    \".kiss\",\n    \".p\",\n    \".e\",\n    \".end\"\n  ],\n  // regular expressions\n  comment: /#.*$/,\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n  plaContent: /[01\\-~\\|]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // comments and whitespace\n      { include: \"@whitespace\" },\n      [/@comment/, \"comment\"],\n      // keyword\n      [\n        /\\.([a-zA-Z_\\-]+)/,\n        {\n          cases: {\n            \"@eos\": { token: \"keyword.$1\" },\n            \"@keywords\": {\n              cases: {\n                \".type\": { token: \"keyword.$1\", next: \"@type\" },\n                \"@default\": { token: \"keyword.$1\", next: \"@keywordArg\" }\n              }\n            },\n            \"@default\": { token: \"keyword.$1\" }\n          }\n        }\n      ],\n      // identifiers\n      [/@identifier/, \"identifier\"],\n      // PLA row\n      [/@plaContent/, \"string\"]\n    ],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\n    type: [{ include: \"@whitespace\" }, [/\\w+/, { token: \"type\", next: \"@pop\" }]],\n    keywordArg: [\n      // whitespace\n      [\n        /[ \\t\\r\\n]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@pop\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // comments\n      [/@comment/, \"comment\", \"@pop\"],\n      // brackets\n      [\n        /[<>()\\[\\]]/,\n        {\n          cases: {\n            \"@eos\": { token: \"@brackets\", next: \"@pop\" },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      // numbers\n      [\n        /\\-?\\d+/,\n        {\n          cases: {\n            \"@eos\": { token: \"number\", next: \"@pop\" },\n            \"@default\": \"number\"\n          }\n        }\n      ],\n      // identifiers\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@eos\": { token: \"identifier\", next: \"@pop\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      // delimiter\n      [\n        /[;=]/,\n        {\n          cases: {\n            \"@eos\": { token: \"delimiter\", next: \"@pop\" },\n            \"@default\": \"delimiter\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRegister","parcelRequire","$parcel$global","globalThis","register","module","exports","$35fc26c24cf3b04e$export$c83be1687c028fc9","$35fc26c24cf3b04e$export$789c912f57fe164c","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","token","keywords","comment","identifier","plaContent","tokenizer","root","include","cases","next","whitespace","type","keywordArg"],"version":3,"file":"pla.7847a701.js.map"}