{"mappings":"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qB,CAAC,iBAAkB,WAAY,iBAAiB,CAAC,CACvE,CAAC,kBAAmB,CAAC,iBAAkB,WAAY,iBAAiB,CAAC,CACrE,CAAC,oBAAqB,CAAC,iBAAkB,WAAY,iBAAiB,CAAC,CAEvE,CAAC,yCAA0C,eAAe,CAE1D,CAAC,yBAA0B,kBAAkB,CAC7C,CAAC,2BAA4B,kBAAkB,CAC/C,CAAC,gCAAiC,gBAAgB,CAClD,CAAC,gBAAiB,kBAAkB,CACpC,CAAC,oBAAqB,mBAAmB,CACzC,CAAC,WAAY,YAAY,CACzB,CAAC,KAAM,YAAY,CACpB,AACH,EACA,cAAe,CACb,WACA,KACA,QACA,QACA,OACA,OACA,QACA,KACA,OACA,OACA,QACA,OACA,UACA,QACA,QACA,WACA,UACA,UACA,WACA,KACA,SACA,aACA,WACA,QACA,SACA,OACA,OACA,QACA,UACA,QACA,QACA,MACA,UACA,OACA,OACA,QACA,KACA,WACA,KACA,MACA,YACA,WACA,OACA,KACA,OACA,OACA,SACA,MACA,OACA,YACA,SACA,WACA,MACA,WACA,UACA,SACA,UACA,YACA,SACA,WACA,MACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,aACA,SACA,SACA,SACA,OACA,QACA,OACA,MACA,SACA,OACA,QACA,YACA,SACA,SACA,QACA,MACA,UACA,WACA,OACA,OACA,QACA,QACA,QACA,QACA,SAED,CACD,QAAS,uEACX,C","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"7tj7B\", function(module, exports) {\n\n$parcel$export(module.exports, \"conf\", () => $570a1301a2754215$export$c83be1687c028fc9);\n$parcel$export(module.exports, \"language\", () => $570a1301a2754215$export$789c912f57fe164c);\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ \nvar $cDseA = parcelRequire(\"cDseA\");\nvar $570a1301a2754215$var$__defProp = Object.defineProperty;\nvar $570a1301a2754215$var$__getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar $570a1301a2754215$var$__getOwnPropNames = Object.getOwnPropertyNames;\nvar $570a1301a2754215$var$__hasOwnProp = Object.prototype.hasOwnProperty;\nvar $570a1301a2754215$var$__copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of $570a1301a2754215$var$__getOwnPropNames(from))if (!$570a1301a2754215$var$__hasOwnProp.call(to, key) && key !== except) $570a1301a2754215$var$__defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = $570a1301a2754215$var$__getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar $570a1301a2754215$var$__reExport = (target, mod, secondTarget)=>($570a1301a2754215$var$__copyProps(target, mod, \"default\"), secondTarget && $570a1301a2754215$var$__copyProps(secondTarget, mod, \"default\"));\n// src/fillers/monaco-editor-core.ts\nvar $570a1301a2754215$var$monaco_editor_core_exports = {};\n$570a1301a2754215$var$__reExport($570a1301a2754215$var$monaco_editor_core_exports, $cDseA);\n// src/basic-languages/razor/razor.ts\nvar $570a1301a2754215$var$EMPTY_ELEMENTS = [\n    \"area\",\n    \"base\",\n    \"br\",\n    \"col\",\n    \"embed\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"keygen\",\n    \"link\",\n    \"menuitem\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\"\n];\nvar $570a1301a2754215$export$c83be1687c028fc9 = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: [\n            \"<!--\",\n            \"-->\"\n        ]\n    },\n    brackets: [\n        [\n            \"<!--\",\n            \"-->\"\n        ],\n        [\n            \"<\",\n            \">\"\n        ],\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        },\n        {\n            open: \"<\",\n            close: \">\"\n        }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(`<(?!(?:${$570a1301a2754215$var$EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n            action: {\n                indentAction: $570a1301a2754215$var$monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n            }\n        },\n        {\n            beforeText: new RegExp(`<(?!(?:${$570a1301a2754215$var$EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n            action: {\n                indentAction: $570a1301a2754215$var$monaco_editor_core_exports.languages.IndentAction.Indent\n            }\n        }\n    ]\n};\nvar $570a1301a2754215$export$789c912f57fe164c = {\n    defaultToken: \"\",\n    tokenPostfix: \"\",\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [\n                /@@@@/\n            ],\n            // text\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.root\"\n                }\n            ],\n            [\n                /<!DOCTYPE/,\n                \"metatag.html\",\n                \"@doctype\"\n            ],\n            [\n                /<!--/,\n                \"comment.html\",\n                \"@comment\"\n            ],\n            [\n                /(<)([\\w\\-]+)(\\/>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    \"delimiter.html\"\n                ]\n            ],\n            [\n                /(<)(script)/,\n                [\n                    \"delimiter.html\",\n                    {\n                        token: \"tag.html\",\n                        next: \"@script\"\n                    }\n                ]\n            ],\n            [\n                /(<)(style)/,\n                [\n                    \"delimiter.html\",\n                    {\n                        token: \"tag.html\",\n                        next: \"@style\"\n                    }\n                ]\n            ],\n            [\n                /(<)([:\\w\\-]+)/,\n                [\n                    \"delimiter.html\",\n                    {\n                        token: \"tag.html\",\n                        next: \"@otherTag\"\n                    }\n                ]\n            ],\n            [\n                /(<\\/)([\\w\\-]+)/,\n                [\n                    \"delimiter.html\",\n                    {\n                        token: \"tag.html\",\n                        next: \"@otherTag\"\n                    }\n                ]\n            ],\n            [\n                /</,\n                \"delimiter.html\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /[^<@]+/\n            ]\n        ],\n        doctype: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.comment\"\n                }\n            ],\n            [\n                /[^>]+/,\n                \"metatag.content.html\"\n            ],\n            [\n                />/,\n                \"metatag.html\",\n                \"@pop\"\n            ]\n        ],\n        comment: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.comment\"\n                }\n            ],\n            [\n                /-->/,\n                \"comment.html\",\n                \"@pop\"\n            ],\n            [\n                /[^-]+/,\n                \"comment.content.html\"\n            ],\n            [\n                /./,\n                \"comment.content.html\"\n            ]\n        ],\n        otherTag: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.otherTag\"\n                }\n            ],\n            [\n                /\\/?>/,\n                \"delimiter.html\",\n                \"@pop\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ]\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.script\"\n                }\n            ],\n            [\n                /type/,\n                \"attribute.name\",\n                \"@scriptAfterType\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@scriptEmbedded.text/javascript\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /(<\\/)(script\\s*)(>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    {\n                        token: \"delimiter.html\",\n                        next: \"@pop\"\n                    }\n                ]\n            ]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.scriptAfterType\"\n                }\n            ],\n            [\n                /=/,\n                \"delimiter\",\n                \"@scriptAfterTypeEquals\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@scriptEmbedded.text/javascript\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            // cover invalid e.g. <script type>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.scriptAfterTypeEquals\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@scriptWithCustomType.$1\"\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@scriptWithCustomType.$1\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@scriptEmbedded.text/javascript\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            // cover invalid e.g. <script type=>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.scriptWithCustomType.$S2\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@scriptEmbedded.$S2\",\n                    nextEmbedded: \"$S2\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        scriptEmbedded: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInEmbeddedState.scriptEmbedded.$S2\",\n                    nextEmbedded: \"@pop\"\n                }\n            ],\n            [\n                /<\\/script/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\",\n                    nextEmbedded: \"@pop\"\n                }\n            ]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.style\"\n                }\n            ],\n            [\n                /type/,\n                \"attribute.name\",\n                \"@styleAfterType\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@styleEmbedded.text/css\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /(<\\/)(style\\s*)(>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    {\n                        token: \"delimiter.html\",\n                        next: \"@pop\"\n                    }\n                ]\n            ]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.styleAfterType\"\n                }\n            ],\n            [\n                /=/,\n                \"delimiter\",\n                \"@styleAfterTypeEquals\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@styleEmbedded.text/css\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            // cover invalid e.g. <style type>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.styleAfterTypeEquals\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@styleWithCustomType.$1\"\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@styleWithCustomType.$1\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@styleEmbedded.text/css\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            // cover invalid e.g. <style type=>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInSimpleState.styleWithCustomType.$S2\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@styleEmbedded.$S2\",\n                    nextEmbedded: \"$S2\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        styleEmbedded: [\n            [\n                /@[^@]/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@razorInEmbeddedState.styleEmbedded.$S2\",\n                    nextEmbedded: \"@pop\"\n                }\n            ],\n            [\n                /<\\/style/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\",\n                    nextEmbedded: \"@pop\"\n                }\n            ]\n        ],\n        // -- END <style> tags handling\n        razorInSimpleState: [\n            [\n                /@\\*/,\n                \"comment.cs\",\n                \"@razorBlockCommentTopLevel\"\n            ],\n            [\n                /@[{(]/,\n                \"metatag.cs\",\n                \"@razorRootTopLevel\"\n            ],\n            [\n                /(@)(\\s*[\\w]+)/,\n                [\n                    \"metatag.cs\",\n                    {\n                        token: \"identifier.cs\",\n                        switchTo: \"@$S2.$S3\"\n                    }\n                ]\n            ],\n            [\n                /[})]/,\n                {\n                    token: \"metatag.cs\",\n                    switchTo: \"@$S2.$S3\"\n                }\n            ],\n            [\n                /\\*@/,\n                {\n                    token: \"comment.cs\",\n                    switchTo: \"@$S2.$S3\"\n                }\n            ]\n        ],\n        razorInEmbeddedState: [\n            [\n                /@\\*/,\n                \"comment.cs\",\n                \"@razorBlockCommentTopLevel\"\n            ],\n            [\n                /@[{(]/,\n                \"metatag.cs\",\n                \"@razorRootTopLevel\"\n            ],\n            [\n                /(@)(\\s*[\\w]+)/,\n                [\n                    \"metatag.cs\",\n                    {\n                        token: \"identifier.cs\",\n                        switchTo: \"@$S2.$S3\",\n                        nextEmbedded: \"$S3\"\n                    }\n                ]\n            ],\n            [\n                /[})]/,\n                {\n                    token: \"metatag.cs\",\n                    switchTo: \"@$S2.$S3\",\n                    nextEmbedded: \"$S3\"\n                }\n            ],\n            [\n                /\\*@/,\n                {\n                    token: \"comment.cs\",\n                    switchTo: \"@$S2.$S3\",\n                    nextEmbedded: \"$S3\"\n                }\n            ]\n        ],\n        razorBlockCommentTopLevel: [\n            [\n                /\\*@/,\n                \"@rematch\",\n                \"@pop\"\n            ],\n            [\n                /[^*]+/,\n                \"comment.cs\"\n            ],\n            [\n                /./,\n                \"comment.cs\"\n            ]\n        ],\n        razorBlockComment: [\n            [\n                /\\*@/,\n                \"comment.cs\",\n                \"@pop\"\n            ],\n            [\n                /[^*]+/,\n                \"comment.cs\"\n            ],\n            [\n                /./,\n                \"comment.cs\"\n            ]\n        ],\n        razorRootTopLevel: [\n            [\n                /\\{/,\n                \"delimiter.bracket.cs\",\n                \"@razorRoot\"\n            ],\n            [\n                /\\(/,\n                \"delimiter.parenthesis.cs\",\n                \"@razorRoot\"\n            ],\n            [\n                /[})]/,\n                \"@rematch\",\n                \"@pop\"\n            ],\n            {\n                include: \"razorCommon\"\n            }\n        ],\n        razorRoot: [\n            [\n                /\\{/,\n                \"delimiter.bracket.cs\",\n                \"@razorRoot\"\n            ],\n            [\n                /\\(/,\n                \"delimiter.parenthesis.cs\",\n                \"@razorRoot\"\n            ],\n            [\n                /\\}/,\n                \"delimiter.bracket.cs\",\n                \"@pop\"\n            ],\n            [\n                /\\)/,\n                \"delimiter.parenthesis.cs\",\n                \"@pop\"\n            ],\n            {\n                include: \"razorCommon\"\n            }\n        ],\n        razorCommon: [\n            [\n                /[a-zA-Z_]\\w*/,\n                {\n                    cases: {\n                        \"@razorKeywords\": {\n                            token: \"keyword.cs\"\n                        },\n                        \"@default\": \"identifier.cs\"\n                    }\n                }\n            ],\n            // brackets\n            [\n                /[\\[\\]]/,\n                \"delimiter.array.cs\"\n            ],\n            // whitespace\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // comments\n            [\n                /\\/\\/.*$/,\n                \"comment.cs\"\n            ],\n            [\n                /@\\*/,\n                \"comment.cs\",\n                \"@razorBlockComment\"\n            ],\n            // strings\n            [\n                /\"([^\"]*)\"/,\n                \"string.cs\"\n            ],\n            [\n                /'([^']*)'/,\n                \"string.cs\"\n            ],\n            // simple html\n            [\n                /(<)([\\w\\-]+)(\\/>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    \"delimiter.html\"\n                ]\n            ],\n            [\n                /(<)([\\w\\-]+)(>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    \"delimiter.html\"\n                ]\n            ],\n            [\n                /(<\\/)([\\w\\-]+)(>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    \"delimiter.html\"\n                ]\n            ],\n            // delimiters\n            [\n                /[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,]/,\n                \"delimiter.cs\"\n            ],\n            // numbers\n            [\n                /\\d*\\d+[eE]([\\-+]?\\d+)?/,\n                \"number.float.cs\"\n            ],\n            [\n                /\\d*\\.\\d+([eE][\\-+]?\\d+)?/,\n                \"number.float.cs\"\n            ],\n            [\n                /0[xX][0-9a-fA-F']*[0-9a-fA-F]/,\n                \"number.hex.cs\"\n            ],\n            [\n                /0[0-7']*[0-7]/,\n                \"number.octal.cs\"\n            ],\n            [\n                /0[bB][0-1']*[0-1]/,\n                \"number.binary.cs\"\n            ],\n            [\n                /\\d[\\d']*/,\n                \"number.cs\"\n            ],\n            [\n                /\\d/,\n                \"number.cs\"\n            ]\n        ]\n    },\n    razorKeywords: [\n        \"abstract\",\n        \"as\",\n        \"async\",\n        \"await\",\n        \"base\",\n        \"bool\",\n        \"break\",\n        \"by\",\n        \"byte\",\n        \"case\",\n        \"catch\",\n        \"char\",\n        \"checked\",\n        \"class\",\n        \"const\",\n        \"continue\",\n        \"decimal\",\n        \"default\",\n        \"delegate\",\n        \"do\",\n        \"double\",\n        \"descending\",\n        \"explicit\",\n        \"event\",\n        \"extern\",\n        \"else\",\n        \"enum\",\n        \"false\",\n        \"finally\",\n        \"fixed\",\n        \"float\",\n        \"for\",\n        \"foreach\",\n        \"from\",\n        \"goto\",\n        \"group\",\n        \"if\",\n        \"implicit\",\n        \"in\",\n        \"int\",\n        \"interface\",\n        \"internal\",\n        \"into\",\n        \"is\",\n        \"lock\",\n        \"long\",\n        \"nameof\",\n        \"new\",\n        \"null\",\n        \"namespace\",\n        \"object\",\n        \"operator\",\n        \"out\",\n        \"override\",\n        \"orderby\",\n        \"params\",\n        \"private\",\n        \"protected\",\n        \"public\",\n        \"readonly\",\n        \"ref\",\n        \"return\",\n        \"switch\",\n        \"struct\",\n        \"sbyte\",\n        \"sealed\",\n        \"short\",\n        \"sizeof\",\n        \"stackalloc\",\n        \"static\",\n        \"string\",\n        \"select\",\n        \"this\",\n        \"throw\",\n        \"true\",\n        \"try\",\n        \"typeof\",\n        \"uint\",\n        \"ulong\",\n        \"unchecked\",\n        \"unsafe\",\n        \"ushort\",\n        \"using\",\n        \"var\",\n        \"virtual\",\n        \"volatile\",\n        \"void\",\n        \"when\",\n        \"while\",\n        \"where\",\n        \"yield\",\n        \"model\",\n        \"inject\"\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/\n};\n\n});\n\n\n//# sourceMappingURL=razor.8d53951e.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/razor/razor.ts\nvar EMPTY_ELEMENTS = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"menuitem\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [\n    [\"<!--\", \"-->\"],\n    [\"<\", \">\"],\n    [\"{\", \"}\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"<\", close: \">\" }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\n        \"i\"\n      ),\n      afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\n        \"i\"\n      ),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \"\",\n  // ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      [/@@@@/],\n      // text\n      [/@[^@]/, { token: \"@rematch\", switchTo: \"@razorInSimpleState.root\" }],\n      [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"],\n      [/<!--/, \"comment.html\", \"@comment\"],\n      [/(<)([\\w\\-]+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\n      [/(<)(script)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@script\" }]],\n      [/(<)(style)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@style\" }]],\n      [/(<)([:\\w\\-]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\n      [/(<\\/)([\\w\\-]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\n      [/</, \"delimiter.html\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/[^<@]+/]\n      // text\n    ],\n    doctype: [\n      [/@[^@]/, { token: \"@rematch\", switchTo: \"@razorInSimpleState.comment\" }],\n      [/[^>]+/, \"metatag.content.html\"],\n      [/>/, \"metatag.html\", \"@pop\"]\n    ],\n    comment: [\n      [/@[^@]/, { token: \"@rematch\", switchTo: \"@razorInSimpleState.comment\" }],\n      [/-->/, \"comment.html\", \"@pop\"],\n      [/[^-]+/, \"comment.content.html\"],\n      [/./, \"comment.content.html\"]\n    ],\n    otherTag: [\n      [/@[^@]/, { token: \"@rematch\", switchTo: \"@razorInSimpleState.otherTag\" }],\n      [/\\/?>/, \"delimiter.html\", \"@pop\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/]\n      // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [\n      [/@[^@]/, { token: \"@rematch\", switchTo: \"@razorInSimpleState.script\" }],\n      [/type/, \"attribute.name\", \"@scriptAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.text/javascript\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [\n        /(<\\/)(script\\s*)(>)/,\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\n      ]\n    ],\n    // After <script ... type\n    scriptAfterType: [\n      [\n        /@[^@]/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@razorInSimpleState.scriptAfterType\"\n        }\n      ],\n      [/=/, \"delimiter\", \"@scriptAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.text/javascript\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type =\n    scriptAfterTypeEquals: [\n      [\n        /@[^@]/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@razorInSimpleState.scriptAfterTypeEquals\"\n        }\n      ],\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.text/javascript\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type = $S2\n    scriptWithCustomType: [\n      [\n        /@[^@]/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@razorInSimpleState.scriptWithCustomType.$S2\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    scriptEmbedded: [\n      [\n        /@[^@]/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@razorInEmbeddedState.scriptEmbedded.$S2\",\n          nextEmbedded: \"@pop\"\n        }\n      ],\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }]\n    ],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [\n      [/@[^@]/, { token: \"@rematch\", switchTo: \"@razorInSimpleState.style\" }],\n      [/type/, \"attribute.name\", \"@styleAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.text/css\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [\n        /(<\\/)(style\\s*)(>)/,\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\n      ]\n    ],\n    // After <style ... type\n    styleAfterType: [\n      [\n        /@[^@]/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@razorInSimpleState.styleAfterType\"\n        }\n      ],\n      [/=/, \"delimiter\", \"@styleAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.text/css\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type =\n    styleAfterTypeEquals: [\n      [\n        /@[^@]/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@razorInSimpleState.styleAfterTypeEquals\"\n        }\n      ],\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.text/css\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type = $S2\n    styleWithCustomType: [\n      [\n        /@[^@]/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@razorInSimpleState.styleWithCustomType.$S2\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    styleEmbedded: [\n      [\n        /@[^@]/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@razorInEmbeddedState.styleEmbedded.$S2\",\n          nextEmbedded: \"@pop\"\n        }\n      ],\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }]\n    ],\n    // -- END <style> tags handling\n    razorInSimpleState: [\n      [/@\\*/, \"comment.cs\", \"@razorBlockCommentTopLevel\"],\n      [/@[{(]/, \"metatag.cs\", \"@razorRootTopLevel\"],\n      [/(@)(\\s*[\\w]+)/, [\"metatag.cs\", { token: \"identifier.cs\", switchTo: \"@$S2.$S3\" }]],\n      [/[})]/, { token: \"metatag.cs\", switchTo: \"@$S2.$S3\" }],\n      [/\\*@/, { token: \"comment.cs\", switchTo: \"@$S2.$S3\" }]\n    ],\n    razorInEmbeddedState: [\n      [/@\\*/, \"comment.cs\", \"@razorBlockCommentTopLevel\"],\n      [/@[{(]/, \"metatag.cs\", \"@razorRootTopLevel\"],\n      [\n        /(@)(\\s*[\\w]+)/,\n        [\n          \"metatag.cs\",\n          {\n            token: \"identifier.cs\",\n            switchTo: \"@$S2.$S3\",\n            nextEmbedded: \"$S3\"\n          }\n        ]\n      ],\n      [\n        /[})]/,\n        {\n          token: \"metatag.cs\",\n          switchTo: \"@$S2.$S3\",\n          nextEmbedded: \"$S3\"\n        }\n      ],\n      [\n        /\\*@/,\n        {\n          token: \"comment.cs\",\n          switchTo: \"@$S2.$S3\",\n          nextEmbedded: \"$S3\"\n        }\n      ]\n    ],\n    razorBlockCommentTopLevel: [\n      [/\\*@/, \"@rematch\", \"@pop\"],\n      [/[^*]+/, \"comment.cs\"],\n      [/./, \"comment.cs\"]\n    ],\n    razorBlockComment: [\n      [/\\*@/, \"comment.cs\", \"@pop\"],\n      [/[^*]+/, \"comment.cs\"],\n      [/./, \"comment.cs\"]\n    ],\n    razorRootTopLevel: [\n      [/\\{/, \"delimiter.bracket.cs\", \"@razorRoot\"],\n      [/\\(/, \"delimiter.parenthesis.cs\", \"@razorRoot\"],\n      [/[})]/, \"@rematch\", \"@pop\"],\n      { include: \"razorCommon\" }\n    ],\n    razorRoot: [\n      [/\\{/, \"delimiter.bracket.cs\", \"@razorRoot\"],\n      [/\\(/, \"delimiter.parenthesis.cs\", \"@razorRoot\"],\n      [/\\}/, \"delimiter.bracket.cs\", \"@pop\"],\n      [/\\)/, \"delimiter.parenthesis.cs\", \"@pop\"],\n      { include: \"razorCommon\" }\n    ],\n    razorCommon: [\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@razorKeywords\": { token: \"keyword.cs\" },\n            \"@default\": \"identifier.cs\"\n          }\n        }\n      ],\n      // brackets\n      [/[\\[\\]]/, \"delimiter.array.cs\"],\n      // whitespace\n      [/[ \\t\\r\\n]+/],\n      // comments\n      [/\\/\\/.*$/, \"comment.cs\"],\n      [/@\\*/, \"comment.cs\", \"@razorBlockComment\"],\n      // strings\n      [/\"([^\"]*)\"/, \"string.cs\"],\n      [/'([^']*)'/, \"string.cs\"],\n      // simple html\n      [/(<)([\\w\\-]+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\n      [/(<)([\\w\\-]+)(>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\n      [/(<\\/)([\\w\\-]+)(>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\n      // delimiters\n      [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,]/, \"delimiter.cs\"],\n      // numbers\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?/, \"number.float.cs\"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float.cs\"],\n      [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, \"number.hex.cs\"],\n      [/0[0-7']*[0-7]/, \"number.octal.cs\"],\n      [/0[bB][0-1']*[0-1]/, \"number.binary.cs\"],\n      [/\\d[\\d']*/, \"number.cs\"],\n      [/\\d/, \"number.cs\"]\n    ]\n  },\n  razorKeywords: [\n    \"abstract\",\n    \"as\",\n    \"async\",\n    \"await\",\n    \"base\",\n    \"bool\",\n    \"break\",\n    \"by\",\n    \"byte\",\n    \"case\",\n    \"catch\",\n    \"char\",\n    \"checked\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"decimal\",\n    \"default\",\n    \"delegate\",\n    \"do\",\n    \"double\",\n    \"descending\",\n    \"explicit\",\n    \"event\",\n    \"extern\",\n    \"else\",\n    \"enum\",\n    \"false\",\n    \"finally\",\n    \"fixed\",\n    \"float\",\n    \"for\",\n    \"foreach\",\n    \"from\",\n    \"goto\",\n    \"group\",\n    \"if\",\n    \"implicit\",\n    \"in\",\n    \"int\",\n    \"interface\",\n    \"internal\",\n    \"into\",\n    \"is\",\n    \"lock\",\n    \"long\",\n    \"nameof\",\n    \"new\",\n    \"null\",\n    \"namespace\",\n    \"object\",\n    \"operator\",\n    \"out\",\n    \"override\",\n    \"orderby\",\n    \"params\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"readonly\",\n    \"ref\",\n    \"return\",\n    \"switch\",\n    \"struct\",\n    \"sbyte\",\n    \"sealed\",\n    \"short\",\n    \"sizeof\",\n    \"stackalloc\",\n    \"static\",\n    \"string\",\n    \"select\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"uint\",\n    \"ulong\",\n    \"unchecked\",\n    \"unsafe\",\n    \"ushort\",\n    \"using\",\n    \"var\",\n    \"virtual\",\n    \"volatile\",\n    \"void\",\n    \"when\",\n    \"while\",\n    \"where\",\n    \"yield\",\n    \"model\",\n    \"inject\"\n    // Razor specific\n  ],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/\n};\nexport {\n  conf,\n  language\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$570a1301a2754215$export$c83be1687c028fc9","$570a1301a2754215$export$789c912f57fe164c","$cDseA","$570a1301a2754215$var$__defProp","$570a1301a2754215$var$__getOwnPropDesc","getOwnPropertyDescriptor","$570a1301a2754215$var$__getOwnPropNames","getOwnPropertyNames","$570a1301a2754215$var$__hasOwnProp","prototype","hasOwnProperty","$570a1301a2754215$var$monaco_editor_core_exports","$570a1301a2754215$var$__copyProps","to","from","except","desc","key","call","$570a1301a2754215$var$EMPTY_ELEMENTS","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","defaultToken","tokenPostfix","tokenizer","root","token","switchTo","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","razorInSimpleState","razorInEmbeddedState","razorBlockCommentTopLevel","razorBlockComment","razorRootTopLevel","include","razorRoot","razorCommon","cases","razorKeywords","escapes"],"version":3,"file":"razor.8d53951e.js.map"}