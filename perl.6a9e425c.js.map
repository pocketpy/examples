{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,E,E,E,O,C,O,I,G,E,E,O,C,W,I,ECAA;;;;;+EAK+E,EAI/E,IAAI,EAAO,CACT,SAAU,CACR,YAAa,GACf,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,AACH,EACI,EAAW,CACb,aAAc,GACd,aAAc,QACd,SAAU,CACR,CAAE,MAAO,oBAAqB,KAAM,IAAK,MAAO,GAAI,EACpD,CAAE,MAAO,wBAAyB,KAAM,IAAK,MAAO,GAAI,EACxD,CAAE,MAAO,mBAAoB,KAAM,IAAK,MAAO,GAAI,EACpD,CAGD,SAAU,CACR,WACA,OACA,OACA,UACA,QACA,KACA,WACA,KACA,WACA,MACA,KACA,MACA,cACA,MACA,KACA,MACA,UACA,KACA,SACA,MACA,KACA,UACA,QACA,WACA,KACA,QACA,OACA,KACA,MACA,KACA,KACA,UACA,WACD,CAED,iBAAkB,CAChB,KACA,MACA,SACA,UACA,KACA,WACA,OACA,cACA,KACA,aACA,SACA,cACA,KACA,YACA,QACA,WACA,KACA,cACA,YACA,aACA,KACA,WACA,MACA,aACA,KACA,aACA,QACA,QACA,KACA,MACA,MACA,SACA,KACA,OACA,QACA,SACA,KACA,OACA,SACA,UACA,KACA,SACA,SACA,WACA,KACA,OACA,SACA,WACA,KACA,QACA,SACA,MACA,KACA,SACA,KACA,QACA,KACA,QACA,OACA,SACA,KACA,OACA,MACA,aACA,KACA,SACA,MACA,OACA,KACA,WACA,OACA,SACA,KACA,OACA,UACA,QACA,KACA,WACA,MACA,UACA,KACA,WACA,MACA,OACA,KACA,WACA,OACA,QACA,KACA,gBACA,OACA,OACA,KACA,gBACA,MACA,QACA,KACA,aACA,MACA,QACA,KACA,WACA,QACA,SACA,KACA,eACA,SACA,UACA,MACA,eACA,YACA,UACA,SACA,YACA,OACA,UACA,QACA,cACA,YACA,UACA,QACA,UACA,OACA,UACA,WACA,UACA,OACA,SACA,QACA,cACA,UACA,WACA,OACA,iBACA,WACA,OACA,UACA,mBACA,WACA,UACA,QACA,cACA,WACA,MACA,QACA,WACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,WACA,MACA,QACA,QACA,gBACA,SACA,WACA,QACA,gBACA,UACA,KACA,QACA,aACA,QACA,UACA,OACA,cACA,SACA,QACA,QACA,aACA,UACA,QACA,MACA,OACA,YACA,YACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,SACA,WACA,OACA,MACA,UACA,UACA,MACA,SACA,QACA,MACA,QACA,OACA,MACA,QACA,OACA,UACA,QACA,WACA,MACA,SACA,SACA,UACA,QACA,SACA,MACA,UACA,OACA,SACA,OACA,SACA,OACA,QACA,UACA,UACA,OACA,OACA,YACA,MACA,OACA,WACA,OACA,OACA,KACA,aACA,QACA,OACA,UACA,YACD,CAED,oBAAqB,CAAC,OAAQ,SAAU,SAAU,UAAW,QAAS,MAAM,CAE5E,iBAAkB,CAChB,KACA,mBACA,2BACA,KACA,MACA,kBACA,KACA,MACA,SACA,KACA,UACA,sBACA,KACA,YACA,MACA,KACA,eACA,QACA,KACA,MACA,OACA,KACA,MACA,OACA,KACA,iBACA,YACA,KACA,sBACA,UACA,KACA,MACA,qBACA,KACA,KACA,0BACA,KACA,KACA,2BACA,KACA,KACA,gBACA,KACA,eACA,UACA,KACA,OACA,OACA,KACA,QACA,aACA,KACA,KACA,YACA,KACA,YACA,cACA,KACA,eACA,gBACA,KACA,aACA,iBACA,KACA,aACA,gBACA,KACA,sBACA,MACA,KACA,qBACA,uBACA,MACA,QACA,UACA,KACA,SACA,iBACA,KACA,QACA,OACA,MACA,cACA,WACA,MACA,2BACA,KACA,uBACA,mBACA,KACA,MACA,qBACA,KACA,MACA,mBACA,MACA,aACA,gCACA,OACA,MACA,qBACA,OACA,MACA,yBACA,YACA,MACA,eACA,OACA,MACA,sBACA,KACA,MACA,mBACA,KACA,MACA,OACA,KACA,MACA,gBACA,QACA,SACA,qBACA,OACA,MACA,0BACA,oBACA,MACA,kBACA,mBACA,oBACD,CAED,QAAS,2BACT,aAAc,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAI,CAChE,QAAS,wEAET,UAAW,CACT,KAAM,CACJ,CAAE,QAAS,aAAc,EACzB,CACE,sBACA,CACE,MAAO,CACL,YAAa,UACb,oBAAqB,kBACrB,uBAAwB,sBACxB,gBAAiB,CACf,MAAO,WACP,KAAM,kBACR,EACA,WAAY,EACd,CACF,EACD,CAED,CACE,oCACA,CACE,MAAO,CACL,oBAAqB,sBACrB,WAAY,UACd,CACF,EACD,CACD,CAAE,QAAS,UAAW,EACtB,CAAE,QAAS,aAAc,EAEzB,CAAE,QAAS,UAAW,EAEtB,CAAE,QAAS,UAAW,EACtB,CAAC,aAAc,YAAY,CAE3B,CAAC,yEAA0E,SAAS,CACpF,CAAC,WAAY,YAAY,CACzB,CAAE,QAAS,UAAW,EACtB,CAAC,OAAQ,YAAY,CACtB,CACD,WAAY,CACV,CAAC,MAAO,QAAQ,CAChB,CAAC,WAAY,UAAU,CACvB,CAAC,UAAW,UAAU,CACvB,CACD,QAAS,CACP,CAAC,2BAA4B,eAAe,CAC5C,CAAC,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","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"jgmtA\", function(module, exports) {\n\n$parcel$export(module.exports, \"conf\", () => $e060f23beb8b9419$export$c83be1687c028fc9);\n$parcel$export(module.exports, \"language\", () => $e060f23beb8b9419$export$789c912f57fe164c);\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/perl/perl.ts\nvar $e060f23beb8b9419$export$c83be1687c028fc9 = {\n    comments: {\n        lineComment: \"#\"\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        },\n        {\n            open: \"`\",\n            close: \"`\"\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        },\n        {\n            open: \"`\",\n            close: \"`\"\n        }\n    ]\n};\nvar $e060f23beb8b9419$export$789c912f57fe164c = {\n    defaultToken: \"\",\n    tokenPostfix: \".perl\",\n    brackets: [\n        {\n            token: \"delimiter.bracket\",\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            token: \"delimiter.parenthesis\",\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            token: \"delimiter.square\",\n            open: \"[\",\n            close: \"]\"\n        }\n    ],\n    // https://learn.perl.org/docs/keywords.html\n    // Perl syntax\n    keywords: [\n        \"__DATA__\",\n        \"else\",\n        \"lock\",\n        \"__END__\",\n        \"elsif\",\n        \"lt\",\n        \"__FILE__\",\n        \"eq\",\n        \"__LINE__\",\n        \"exp\",\n        \"ne\",\n        \"sub\",\n        \"__PACKAGE__\",\n        \"for\",\n        \"no\",\n        \"and\",\n        \"foreach\",\n        \"or\",\n        \"unless\",\n        \"cmp\",\n        \"ge\",\n        \"package\",\n        \"until\",\n        \"continue\",\n        \"gt\",\n        \"while\",\n        \"CORE\",\n        \"if\",\n        \"xor\",\n        \"do\",\n        \"le\",\n        \"__DIE__\",\n        \"__WARN__\"\n    ],\n    // Perl functions\n    builtinFunctions: [\n        \"-A\",\n        \"END\",\n        \"length\",\n        \"setpgrp\",\n        \"-B\",\n        \"endgrent\",\n        \"link\",\n        \"setpriority\",\n        \"-b\",\n        \"endhostent\",\n        \"listen\",\n        \"setprotoent\",\n        \"-C\",\n        \"endnetent\",\n        \"local\",\n        \"setpwent\",\n        \"-c\",\n        \"endprotoent\",\n        \"localtime\",\n        \"setservent\",\n        \"-d\",\n        \"endpwent\",\n        \"log\",\n        \"setsockopt\",\n        \"-e\",\n        \"endservent\",\n        \"lstat\",\n        \"shift\",\n        \"-f\",\n        \"eof\",\n        \"map\",\n        \"shmctl\",\n        \"-g\",\n        \"eval\",\n        \"mkdir\",\n        \"shmget\",\n        \"-k\",\n        \"exec\",\n        \"msgctl\",\n        \"shmread\",\n        \"-l\",\n        \"exists\",\n        \"msgget\",\n        \"shmwrite\",\n        \"-M\",\n        \"exit\",\n        \"msgrcv\",\n        \"shutdown\",\n        \"-O\",\n        \"fcntl\",\n        \"msgsnd\",\n        \"sin\",\n        \"-o\",\n        \"fileno\",\n        \"my\",\n        \"sleep\",\n        \"-p\",\n        \"flock\",\n        \"next\",\n        \"socket\",\n        \"-r\",\n        \"fork\",\n        \"not\",\n        \"socketpair\",\n        \"-R\",\n        \"format\",\n        \"oct\",\n        \"sort\",\n        \"-S\",\n        \"formline\",\n        \"open\",\n        \"splice\",\n        \"-s\",\n        \"getc\",\n        \"opendir\",\n        \"split\",\n        \"-T\",\n        \"getgrent\",\n        \"ord\",\n        \"sprintf\",\n        \"-t\",\n        \"getgrgid\",\n        \"our\",\n        \"sqrt\",\n        \"-u\",\n        \"getgrnam\",\n        \"pack\",\n        \"srand\",\n        \"-w\",\n        \"gethostbyaddr\",\n        \"pipe\",\n        \"stat\",\n        \"-W\",\n        \"gethostbyname\",\n        \"pop\",\n        \"state\",\n        \"-X\",\n        \"gethostent\",\n        \"pos\",\n        \"study\",\n        \"-x\",\n        \"getlogin\",\n        \"print\",\n        \"substr\",\n        \"-z\",\n        \"getnetbyaddr\",\n        \"printf\",\n        \"symlink\",\n        \"abs\",\n        \"getnetbyname\",\n        \"prototype\",\n        \"syscall\",\n        \"accept\",\n        \"getnetent\",\n        \"push\",\n        \"sysopen\",\n        \"alarm\",\n        \"getpeername\",\n        \"quotemeta\",\n        \"sysread\",\n        \"atan2\",\n        \"getpgrp\",\n        \"rand\",\n        \"sysseek\",\n        \"AUTOLOAD\",\n        \"getppid\",\n        \"read\",\n        \"system\",\n        \"BEGIN\",\n        \"getpriority\",\n        \"readdir\",\n        \"syswrite\",\n        \"bind\",\n        \"getprotobyname\",\n        \"readline\",\n        \"tell\",\n        \"binmode\",\n        \"getprotobynumber\",\n        \"readlink\",\n        \"telldir\",\n        \"bless\",\n        \"getprotoent\",\n        \"readpipe\",\n        \"tie\",\n        \"break\",\n        \"getpwent\",\n        \"recv\",\n        \"tied\",\n        \"caller\",\n        \"getpwnam\",\n        \"redo\",\n        \"time\",\n        \"chdir\",\n        \"getpwuid\",\n        \"ref\",\n        \"times\",\n        \"CHECK\",\n        \"getservbyname\",\n        \"rename\",\n        \"truncate\",\n        \"chmod\",\n        \"getservbyport\",\n        \"require\",\n        \"uc\",\n        \"chomp\",\n        \"getservent\",\n        \"reset\",\n        \"ucfirst\",\n        \"chop\",\n        \"getsockname\",\n        \"return\",\n        \"umask\",\n        \"chown\",\n        \"getsockopt\",\n        \"reverse\",\n        \"undef\",\n        \"chr\",\n        \"glob\",\n        \"rewinddir\",\n        \"UNITCHECK\",\n        \"chroot\",\n        \"gmtime\",\n        \"rindex\",\n        \"unlink\",\n        \"close\",\n        \"goto\",\n        \"rmdir\",\n        \"unpack\",\n        \"closedir\",\n        \"grep\",\n        \"say\",\n        \"unshift\",\n        \"connect\",\n        \"hex\",\n        \"scalar\",\n        \"untie\",\n        \"cos\",\n        \"index\",\n        \"seek\",\n        \"use\",\n        \"crypt\",\n        \"INIT\",\n        \"seekdir\",\n        \"utime\",\n        \"dbmclose\",\n        \"int\",\n        \"select\",\n        \"values\",\n        \"dbmopen\",\n        \"ioctl\",\n        \"semctl\",\n        \"vec\",\n        \"defined\",\n        \"join\",\n        \"semget\",\n        \"wait\",\n        \"delete\",\n        \"keys\",\n        \"semop\",\n        \"waitpid\",\n        \"DESTROY\",\n        \"kill\",\n        \"send\",\n        \"wantarray\",\n        \"die\",\n        \"last\",\n        \"setgrent\",\n        \"warn\",\n        \"dump\",\n        \"lc\",\n        \"sethostent\",\n        \"write\",\n        \"each\",\n        \"lcfirst\",\n        \"setnetent\"\n    ],\n    // File handlers\n    builtinFileHandlers: [\n        \"ARGV\",\n        \"STDERR\",\n        \"STDOUT\",\n        \"ARGVOUT\",\n        \"STDIN\",\n        \"ENV\"\n    ],\n    // Perl variables\n    builtinVariables: [\n        \"$!\",\n        \"$^RE_TRIE_MAXBUF\",\n        \"$LAST_REGEXP_CODE_RESULT\",\n        '$\"',\n        \"$^S\",\n        \"$LIST_SEPARATOR\",\n        \"$#\",\n        \"$^T\",\n        \"$MATCH\",\n        \"$$\",\n        \"$^TAINT\",\n        \"$MULTILINE_MATCHING\",\n        \"$%\",\n        \"$^UNICODE\",\n        \"$NR\",\n        \"$&\",\n        \"$^UTF8LOCALE\",\n        \"$OFMT\",\n        \"$'\",\n        \"$^V\",\n        \"$OFS\",\n        \"$(\",\n        \"$^W\",\n        \"$ORS\",\n        \"$)\",\n        \"$^WARNING_BITS\",\n        \"$OS_ERROR\",\n        \"$*\",\n        \"$^WIDE_SYSTEM_CALLS\",\n        \"$OSNAME\",\n        \"$+\",\n        \"$^X\",\n        \"$OUTPUT_AUTO_FLUSH\",\n        \"$,\",\n        \"$_\",\n        \"$OUTPUT_FIELD_SEPARATOR\",\n        \"$-\",\n        \"$`\",\n        \"$OUTPUT_RECORD_SEPARATOR\",\n        \"$.\",\n        \"$a\",\n        \"$PERL_VERSION\",\n        \"$/\",\n        \"$ACCUMULATOR\",\n        \"$PERLDB\",\n        \"$0\",\n        \"$ARG\",\n        \"$PID\",\n        \"$:\",\n        \"$ARGV\",\n        \"$POSTMATCH\",\n        \"$;\",\n        \"$b\",\n        \"$PREMATCH\",\n        \"$<\",\n        \"$BASETIME\",\n        \"$PROCESS_ID\",\n        \"$=\",\n        \"$CHILD_ERROR\",\n        \"$PROGRAM_NAME\",\n        \"$>\",\n        \"$COMPILING\",\n        \"$REAL_GROUP_ID\",\n        \"$?\",\n        \"$DEBUGGING\",\n        \"$REAL_USER_ID\",\n        \"$@\",\n        \"$EFFECTIVE_GROUP_ID\",\n        \"$RS\",\n        \"$[\",\n        \"$EFFECTIVE_USER_ID\",\n        \"$SUBSCRIPT_SEPARATOR\",\n        \"$\\\\\",\n        \"$EGID\",\n        \"$SUBSEP\",\n        \"$]\",\n        \"$ERRNO\",\n        \"$SYSTEM_FD_MAX\",\n        \"$^\",\n        \"$EUID\",\n        \"$UID\",\n        \"$^A\",\n        \"$EVAL_ERROR\",\n        \"$WARNING\",\n        \"$^C\",\n        \"$EXCEPTIONS_BEING_CAUGHT\",\n        \"$|\",\n        \"$^CHILD_ERROR_NATIVE\",\n        \"$EXECUTABLE_NAME\",\n        \"$~\",\n        \"$^D\",\n        \"$EXTENDED_OS_ERROR\",\n        \"%!\",\n        \"$^E\",\n        \"$FORMAT_FORMFEED\",\n        \"%^H\",\n        \"$^ENCODING\",\n        \"$FORMAT_LINE_BREAK_CHARACTERS\",\n        \"%ENV\",\n        \"$^F\",\n        \"$FORMAT_LINES_LEFT\",\n        \"%INC\",\n        \"$^H\",\n        \"$FORMAT_LINES_PER_PAGE\",\n        \"%OVERLOAD\",\n        \"$^I\",\n        \"$FORMAT_NAME\",\n        \"%SIG\",\n        \"$^L\",\n        \"$FORMAT_PAGE_NUMBER\",\n        \"@+\",\n        \"$^M\",\n        \"$FORMAT_TOP_NAME\",\n        \"@-\",\n        \"$^N\",\n        \"$GID\",\n        \"@_\",\n        \"$^O\",\n        \"$INPLACE_EDIT\",\n        \"@ARGV\",\n        \"$^OPEN\",\n        \"$INPUT_LINE_NUMBER\",\n        \"@INC\",\n        \"$^P\",\n        \"$INPUT_RECORD_SEPARATOR\",\n        \"@LAST_MATCH_START\",\n        \"$^R\",\n        \"$LAST_MATCH_END\",\n        \"$^RE_DEBUG_FLAGS\",\n        \"$LAST_PAREN_MATCH\"\n    ],\n    // operators\n    symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n    quoteLikeOps: [\n        \"qr\",\n        \"m\",\n        \"s\",\n        \"q\",\n        \"qq\",\n        \"qx\",\n        \"qw\",\n        \"tr\",\n        \"y\"\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            {\n                include: \"@whitespace\"\n            },\n            [\n                /[a-zA-Z\\-_][\\w\\-_]*/,\n                {\n                    cases: {\n                        \"@keywords\": \"keyword\",\n                        \"@builtinFunctions\": \"type.identifier\",\n                        \"@builtinFileHandlers\": \"variable.predefined\",\n                        \"@quoteLikeOps\": {\n                            token: \"@rematch\",\n                            next: \"quotedConstructs\"\n                        },\n                        \"@default\": \"\"\n                    }\n                }\n            ],\n            // Perl variables\n            [\n                /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\n                {\n                    cases: {\n                        \"@builtinVariables\": \"variable.predefined\",\n                        \"@default\": \"variable\"\n                    }\n                }\n            ],\n            {\n                include: \"@strings\"\n            },\n            {\n                include: \"@dblStrings\"\n            },\n            // Perl Doc\n            {\n                include: \"@perldoc\"\n            },\n            // Here Doc\n            {\n                include: \"@heredoc\"\n            },\n            [\n                /[{}\\[\\]()]/,\n                \"@brackets\"\n            ],\n            // RegExp\n            [\n                /[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/,\n                \"regexp\"\n            ],\n            [\n                /@symbols/,\n                \"operators\"\n            ],\n            {\n                include: \"@numbers\"\n            },\n            [\n                /[,;]/,\n                \"delimiter\"\n            ]\n        ],\n        whitespace: [\n            [\n                /\\s+/,\n                \"white\"\n            ],\n            [\n                /(^#!.*$)/,\n                \"metatag\"\n            ],\n            [\n                /(^#.*$)/,\n                \"comment\"\n            ]\n        ],\n        numbers: [\n            [\n                /\\d*\\.\\d+([eE][\\-+]?\\d+)?/,\n                \"number.float\"\n            ],\n            [\n                /0[xX][0-9a-fA-F_]*[0-9a-fA-F]/,\n                \"number.hex\"\n            ],\n            [\n                /\\d+/,\n                \"number\"\n            ]\n        ],\n        // Single quote string\n        strings: [\n            [\n                /'/,\n                \"string\",\n                \"@stringBody\"\n            ]\n        ],\n        stringBody: [\n            [\n                /'/,\n                \"string\",\n                \"@popall\"\n            ],\n            [\n                /\\\\'/,\n                \"string.escape\"\n            ],\n            [\n                /./,\n                \"string\"\n            ]\n        ],\n        // Double quote string\n        dblStrings: [\n            [\n                /\"/,\n                \"string\",\n                \"@dblStringBody\"\n            ]\n        ],\n        dblStringBody: [\n            [\n                /\"/,\n                \"string\",\n                \"@popall\"\n            ],\n            [\n                /@escapes/,\n                \"string.escape\"\n            ],\n            [\n                /\\\\./,\n                \"string.escape.invalid\"\n            ],\n            {\n                include: \"@variables\"\n            },\n            [\n                /./,\n                \"string\"\n            ]\n        ],\n        // Quoted constructs\n        // Percent strings in Ruby are similar to quote-like operators in Perl.\n        // This is adapted from pstrings in ../ruby/ruby.ts.\n        quotedConstructs: [\n            [\n                /(q|qw|tr|y)\\s*\\(/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qstring.(.)\"\n                }\n            ],\n            [\n                /(q|qw|tr|y)\\s*\\[/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qstring.[.]\"\n                }\n            ],\n            [\n                /(q|qw|tr|y)\\s*\\{/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qstring.{.}\"\n                }\n            ],\n            [\n                /(q|qw|tr|y)\\s*</,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qstring.<.>\"\n                }\n            ],\n            [\n                /(q|qw|tr|y)#/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qstring.#.#\"\n                }\n            ],\n            [\n                /(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qstring.$2.$2\"\n                }\n            ],\n            [\n                /(q|qw|tr|y)\\s+(\\w)/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qstring.$2.$2\"\n                }\n            ],\n            [\n                /(qr|m|s)\\s*\\(/,\n                {\n                    token: \"regexp.delim\",\n                    switchTo: \"@qregexp.(.)\"\n                }\n            ],\n            [\n                /(qr|m|s)\\s*\\[/,\n                {\n                    token: \"regexp.delim\",\n                    switchTo: \"@qregexp.[.]\"\n                }\n            ],\n            [\n                /(qr|m|s)\\s*\\{/,\n                {\n                    token: \"regexp.delim\",\n                    switchTo: \"@qregexp.{.}\"\n                }\n            ],\n            [\n                /(qr|m|s)\\s*</,\n                {\n                    token: \"regexp.delim\",\n                    switchTo: \"@qregexp.<.>\"\n                }\n            ],\n            [\n                /(qr|m|s)#/,\n                {\n                    token: \"regexp.delim\",\n                    switchTo: \"@qregexp.#.#\"\n                }\n            ],\n            [\n                /(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/,\n                {\n                    token: \"regexp.delim\",\n                    switchTo: \"@qregexp.$2.$2\"\n                }\n            ],\n            [\n                /(qr|m|s)\\s+(\\w)/,\n                {\n                    token: \"regexp.delim\",\n                    switchTo: \"@qregexp.$2.$2\"\n                }\n            ],\n            [\n                /(qq|qx)\\s*\\(/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qqstring.(.)\"\n                }\n            ],\n            [\n                /(qq|qx)\\s*\\[/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qqstring.[.]\"\n                }\n            ],\n            [\n                /(qq|qx)\\s*\\{/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qqstring.{.}\"\n                }\n            ],\n            [\n                /(qq|qx)\\s*</,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qqstring.<.>\"\n                }\n            ],\n            [\n                /(qq|qx)#/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qqstring.#.#\"\n                }\n            ],\n            [\n                /(qq|qx)\\s*([^A-Za-z0-9#\\s])/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qqstring.$2.$2\"\n                }\n            ],\n            [\n                /(qq|qx)\\s+(\\w)/,\n                {\n                    token: \"string.delim\",\n                    switchTo: \"@qqstring.$2.$2\"\n                }\n            ]\n        ],\n        // Non-expanded quoted string\n        // qstring<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qstring: [\n            [\n                /\\\\./,\n                \"string.escape\"\n            ],\n            [\n                /./,\n                {\n                    cases: {\n                        \"$#==$S3\": {\n                            token: \"string.delim\",\n                            next: \"@pop\"\n                        },\n                        \"$#==$S2\": {\n                            token: \"string.delim\",\n                            next: \"@push\"\n                        },\n                        // nested delimiters\n                        \"@default\": \"string\"\n                    }\n                }\n            ]\n        ],\n        // Quoted regexp\n        // qregexp.<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qregexp: [\n            {\n                include: \"@variables\"\n            },\n            [\n                /\\\\./,\n                \"regexp.escape\"\n            ],\n            [\n                /./,\n                {\n                    cases: {\n                        \"$#==$S3\": {\n                            token: \"regexp.delim\",\n                            next: \"@regexpModifiers\"\n                        },\n                        \"$#==$S2\": {\n                            token: \"regexp.delim\",\n                            next: \"@push\"\n                        },\n                        // nested delimiters\n                        \"@default\": \"regexp\"\n                    }\n                }\n            ]\n        ],\n        regexpModifiers: [\n            [\n                /[msixpodualngcer]+/,\n                {\n                    token: \"regexp.modifier\",\n                    next: \"@popall\"\n                }\n            ]\n        ],\n        // Expanded quoted string\n        // qqstring.<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qqstring: [\n            {\n                include: \"@variables\"\n            },\n            {\n                include: \"@qstring\"\n            }\n        ],\n        heredoc: [\n            [\n                /<<\\s*['\"`]?([\\w\\-]+)['\"`]?/,\n                {\n                    token: \"string.heredoc.delimiter\",\n                    next: \"@heredocBody.$1\"\n                }\n            ]\n        ],\n        heredocBody: [\n            [\n                /^([\\w\\-]+)$/,\n                {\n                    cases: {\n                        \"$1==$S2\": [\n                            {\n                                token: \"string.heredoc.delimiter\",\n                                next: \"@popall\"\n                            }\n                        ],\n                        \"@default\": \"string.heredoc\"\n                    }\n                }\n            ],\n            [\n                /./,\n                \"string.heredoc\"\n            ]\n        ],\n        perldoc: [\n            [\n                /^=\\w/,\n                \"comment.doc\",\n                \"@perldocBody\"\n            ]\n        ],\n        perldocBody: [\n            [\n                /^=cut\\b/,\n                \"type.identifier\",\n                \"@popall\"\n            ],\n            [\n                /./,\n                \"comment.doc\"\n            ]\n        ],\n        variables: [\n            [\n                /\\$\\w+/,\n                \"variable\"\n            ],\n            // scalar\n            [\n                /@\\w+/,\n                \"variable\"\n            ],\n            // array\n            [\n                /%\\w+/,\n                \"variable\"\n            ]\n        ]\n    }\n};\n\n});\n\n\n//# sourceMappingURL=perl.6a9e425c.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/perl/perl.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".perl\",\n  brackets: [\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  // https://learn.perl.org/docs/keywords.html\n  // Perl syntax\n  keywords: [\n    \"__DATA__\",\n    \"else\",\n    \"lock\",\n    \"__END__\",\n    \"elsif\",\n    \"lt\",\n    \"__FILE__\",\n    \"eq\",\n    \"__LINE__\",\n    \"exp\",\n    \"ne\",\n    \"sub\",\n    \"__PACKAGE__\",\n    \"for\",\n    \"no\",\n    \"and\",\n    \"foreach\",\n    \"or\",\n    \"unless\",\n    \"cmp\",\n    \"ge\",\n    \"package\",\n    \"until\",\n    \"continue\",\n    \"gt\",\n    \"while\",\n    \"CORE\",\n    \"if\",\n    \"xor\",\n    \"do\",\n    \"le\",\n    \"__DIE__\",\n    \"__WARN__\"\n  ],\n  // Perl functions\n  builtinFunctions: [\n    \"-A\",\n    \"END\",\n    \"length\",\n    \"setpgrp\",\n    \"-B\",\n    \"endgrent\",\n    \"link\",\n    \"setpriority\",\n    \"-b\",\n    \"endhostent\",\n    \"listen\",\n    \"setprotoent\",\n    \"-C\",\n    \"endnetent\",\n    \"local\",\n    \"setpwent\",\n    \"-c\",\n    \"endprotoent\",\n    \"localtime\",\n    \"setservent\",\n    \"-d\",\n    \"endpwent\",\n    \"log\",\n    \"setsockopt\",\n    \"-e\",\n    \"endservent\",\n    \"lstat\",\n    \"shift\",\n    \"-f\",\n    \"eof\",\n    \"map\",\n    \"shmctl\",\n    \"-g\",\n    \"eval\",\n    \"mkdir\",\n    \"shmget\",\n    \"-k\",\n    \"exec\",\n    \"msgctl\",\n    \"shmread\",\n    \"-l\",\n    \"exists\",\n    \"msgget\",\n    \"shmwrite\",\n    \"-M\",\n    \"exit\",\n    \"msgrcv\",\n    \"shutdown\",\n    \"-O\",\n    \"fcntl\",\n    \"msgsnd\",\n    \"sin\",\n    \"-o\",\n    \"fileno\",\n    \"my\",\n    \"sleep\",\n    \"-p\",\n    \"flock\",\n    \"next\",\n    \"socket\",\n    \"-r\",\n    \"fork\",\n    \"not\",\n    \"socketpair\",\n    \"-R\",\n    \"format\",\n    \"oct\",\n    \"sort\",\n    \"-S\",\n    \"formline\",\n    \"open\",\n    \"splice\",\n    \"-s\",\n    \"getc\",\n    \"opendir\",\n    \"split\",\n    \"-T\",\n    \"getgrent\",\n    \"ord\",\n    \"sprintf\",\n    \"-t\",\n    \"getgrgid\",\n    \"our\",\n    \"sqrt\",\n    \"-u\",\n    \"getgrnam\",\n    \"pack\",\n    \"srand\",\n    \"-w\",\n    \"gethostbyaddr\",\n    \"pipe\",\n    \"stat\",\n    \"-W\",\n    \"gethostbyname\",\n    \"pop\",\n    \"state\",\n    \"-X\",\n    \"gethostent\",\n    \"pos\",\n    \"study\",\n    \"-x\",\n    \"getlogin\",\n    \"print\",\n    \"substr\",\n    \"-z\",\n    \"getnetbyaddr\",\n    \"printf\",\n    \"symlink\",\n    \"abs\",\n    \"getnetbyname\",\n    \"prototype\",\n    \"syscall\",\n    \"accept\",\n    \"getnetent\",\n    \"push\",\n    \"sysopen\",\n    \"alarm\",\n    \"getpeername\",\n    \"quotemeta\",\n    \"sysread\",\n    \"atan2\",\n    \"getpgrp\",\n    \"rand\",\n    \"sysseek\",\n    \"AUTOLOAD\",\n    \"getppid\",\n    \"read\",\n    \"system\",\n    \"BEGIN\",\n    \"getpriority\",\n    \"readdir\",\n    \"syswrite\",\n    \"bind\",\n    \"getprotobyname\",\n    \"readline\",\n    \"tell\",\n    \"binmode\",\n    \"getprotobynumber\",\n    \"readlink\",\n    \"telldir\",\n    \"bless\",\n    \"getprotoent\",\n    \"readpipe\",\n    \"tie\",\n    \"break\",\n    \"getpwent\",\n    \"recv\",\n    \"tied\",\n    \"caller\",\n    \"getpwnam\",\n    \"redo\",\n    \"time\",\n    \"chdir\",\n    \"getpwuid\",\n    \"ref\",\n    \"times\",\n    \"CHECK\",\n    \"getservbyname\",\n    \"rename\",\n    \"truncate\",\n    \"chmod\",\n    \"getservbyport\",\n    \"require\",\n    \"uc\",\n    \"chomp\",\n    \"getservent\",\n    \"reset\",\n    \"ucfirst\",\n    \"chop\",\n    \"getsockname\",\n    \"return\",\n    \"umask\",\n    \"chown\",\n    \"getsockopt\",\n    \"reverse\",\n    \"undef\",\n    \"chr\",\n    \"glob\",\n    \"rewinddir\",\n    \"UNITCHECK\",\n    \"chroot\",\n    \"gmtime\",\n    \"rindex\",\n    \"unlink\",\n    \"close\",\n    \"goto\",\n    \"rmdir\",\n    \"unpack\",\n    \"closedir\",\n    \"grep\",\n    \"say\",\n    \"unshift\",\n    \"connect\",\n    \"hex\",\n    \"scalar\",\n    \"untie\",\n    \"cos\",\n    \"index\",\n    \"seek\",\n    \"use\",\n    \"crypt\",\n    \"INIT\",\n    \"seekdir\",\n    \"utime\",\n    \"dbmclose\",\n    \"int\",\n    \"select\",\n    \"values\",\n    \"dbmopen\",\n    \"ioctl\",\n    \"semctl\",\n    \"vec\",\n    \"defined\",\n    \"join\",\n    \"semget\",\n    \"wait\",\n    \"delete\",\n    \"keys\",\n    \"semop\",\n    \"waitpid\",\n    \"DESTROY\",\n    \"kill\",\n    \"send\",\n    \"wantarray\",\n    \"die\",\n    \"last\",\n    \"setgrent\",\n    \"warn\",\n    \"dump\",\n    \"lc\",\n    \"sethostent\",\n    \"write\",\n    \"each\",\n    \"lcfirst\",\n    \"setnetent\"\n  ],\n  // File handlers\n  builtinFileHandlers: [\"ARGV\", \"STDERR\", \"STDOUT\", \"ARGVOUT\", \"STDIN\", \"ENV\"],\n  // Perl variables\n  builtinVariables: [\n    \"$!\",\n    \"$^RE_TRIE_MAXBUF\",\n    \"$LAST_REGEXP_CODE_RESULT\",\n    '$\"',\n    \"$^S\",\n    \"$LIST_SEPARATOR\",\n    \"$#\",\n    \"$^T\",\n    \"$MATCH\",\n    \"$$\",\n    \"$^TAINT\",\n    \"$MULTILINE_MATCHING\",\n    \"$%\",\n    \"$^UNICODE\",\n    \"$NR\",\n    \"$&\",\n    \"$^UTF8LOCALE\",\n    \"$OFMT\",\n    \"$'\",\n    \"$^V\",\n    \"$OFS\",\n    \"$(\",\n    \"$^W\",\n    \"$ORS\",\n    \"$)\",\n    \"$^WARNING_BITS\",\n    \"$OS_ERROR\",\n    \"$*\",\n    \"$^WIDE_SYSTEM_CALLS\",\n    \"$OSNAME\",\n    \"$+\",\n    \"$^X\",\n    \"$OUTPUT_AUTO_FLUSH\",\n    \"$,\",\n    \"$_\",\n    \"$OUTPUT_FIELD_SEPARATOR\",\n    \"$-\",\n    \"$`\",\n    \"$OUTPUT_RECORD_SEPARATOR\",\n    \"$.\",\n    \"$a\",\n    \"$PERL_VERSION\",\n    \"$/\",\n    \"$ACCUMULATOR\",\n    \"$PERLDB\",\n    \"$0\",\n    \"$ARG\",\n    \"$PID\",\n    \"$:\",\n    \"$ARGV\",\n    \"$POSTMATCH\",\n    \"$;\",\n    \"$b\",\n    \"$PREMATCH\",\n    \"$<\",\n    \"$BASETIME\",\n    \"$PROCESS_ID\",\n    \"$=\",\n    \"$CHILD_ERROR\",\n    \"$PROGRAM_NAME\",\n    \"$>\",\n    \"$COMPILING\",\n    \"$REAL_GROUP_ID\",\n    \"$?\",\n    \"$DEBUGGING\",\n    \"$REAL_USER_ID\",\n    \"$@\",\n    \"$EFFECTIVE_GROUP_ID\",\n    \"$RS\",\n    \"$[\",\n    \"$EFFECTIVE_USER_ID\",\n    \"$SUBSCRIPT_SEPARATOR\",\n    \"$\\\\\",\n    \"$EGID\",\n    \"$SUBSEP\",\n    \"$]\",\n    \"$ERRNO\",\n    \"$SYSTEM_FD_MAX\",\n    \"$^\",\n    \"$EUID\",\n    \"$UID\",\n    \"$^A\",\n    \"$EVAL_ERROR\",\n    \"$WARNING\",\n    \"$^C\",\n    \"$EXCEPTIONS_BEING_CAUGHT\",\n    \"$|\",\n    \"$^CHILD_ERROR_NATIVE\",\n    \"$EXECUTABLE_NAME\",\n    \"$~\",\n    \"$^D\",\n    \"$EXTENDED_OS_ERROR\",\n    \"%!\",\n    \"$^E\",\n    \"$FORMAT_FORMFEED\",\n    \"%^H\",\n    \"$^ENCODING\",\n    \"$FORMAT_LINE_BREAK_CHARACTERS\",\n    \"%ENV\",\n    \"$^F\",\n    \"$FORMAT_LINES_LEFT\",\n    \"%INC\",\n    \"$^H\",\n    \"$FORMAT_LINES_PER_PAGE\",\n    \"%OVERLOAD\",\n    \"$^I\",\n    \"$FORMAT_NAME\",\n    \"%SIG\",\n    \"$^L\",\n    \"$FORMAT_PAGE_NUMBER\",\n    \"@+\",\n    \"$^M\",\n    \"$FORMAT_TOP_NAME\",\n    \"@-\",\n    \"$^N\",\n    \"$GID\",\n    \"@_\",\n    \"$^O\",\n    \"$INPLACE_EDIT\",\n    \"@ARGV\",\n    \"$^OPEN\",\n    \"$INPUT_LINE_NUMBER\",\n    \"@INC\",\n    \"$^P\",\n    \"$INPUT_RECORD_SEPARATOR\",\n    \"@LAST_MATCH_START\",\n    \"$^R\",\n    \"$LAST_MATCH_END\",\n    \"$^RE_DEBUG_FLAGS\",\n    \"$LAST_PAREN_MATCH\"\n  ],\n  // operators\n  symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n  quoteLikeOps: [\"qr\", \"m\", \"s\", \"q\", \"qq\", \"qx\", \"qw\", \"tr\", \"y\"],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [\n        /[a-zA-Z\\-_][\\w\\-_]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@builtinFunctions\": \"type.identifier\",\n            \"@builtinFileHandlers\": \"variable.predefined\",\n            \"@quoteLikeOps\": {\n              token: \"@rematch\",\n              next: \"quotedConstructs\"\n            },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // Perl variables\n      [\n        /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\n        {\n          cases: {\n            \"@builtinVariables\": \"variable.predefined\",\n            \"@default\": \"variable\"\n          }\n        }\n      ],\n      { include: \"@strings\" },\n      { include: \"@dblStrings\" },\n      // Perl Doc\n      { include: \"@perldoc\" },\n      // Here Doc\n      { include: \"@heredoc\" },\n      [/[{}\\[\\]()]/, \"@brackets\"],\n      // RegExp\n      [/[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/, \"regexp\"],\n      [/@symbols/, \"operators\"],\n      { include: \"@numbers\" },\n      [/[,;]/, \"delimiter\"]\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/(^#!.*$)/, \"metatag\"],\n      [/(^#.*$)/, \"comment\"]\n    ],\n    numbers: [\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\n      [/\\d+/, \"number\"]\n    ],\n    // Single quote string\n    strings: [[/'/, \"string\", \"@stringBody\"]],\n    stringBody: [\n      [/'/, \"string\", \"@popall\"],\n      [/\\\\'/, \"string.escape\"],\n      [/./, \"string\"]\n    ],\n    // Double quote string\n    dblStrings: [[/\"/, \"string\", \"@dblStringBody\"]],\n    dblStringBody: [\n      [/\"/, \"string\", \"@popall\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      { include: \"@variables\" },\n      [/./, \"string\"]\n    ],\n    // Quoted constructs\n    // Percent strings in Ruby are similar to quote-like operators in Perl.\n    // This is adapted from pstrings in ../ruby/ruby.ts.\n    quotedConstructs: [\n      [/(q|qw|tr|y)\\s*\\(/, { token: \"string.delim\", switchTo: \"@qstring.(.)\" }],\n      [/(q|qw|tr|y)\\s*\\[/, { token: \"string.delim\", switchTo: \"@qstring.[.]\" }],\n      [/(q|qw|tr|y)\\s*\\{/, { token: \"string.delim\", switchTo: \"@qstring.{.}\" }],\n      [/(q|qw|tr|y)\\s*</, { token: \"string.delim\", switchTo: \"@qstring.<.>\" }],\n      [/(q|qw|tr|y)#/, { token: \"string.delim\", switchTo: \"@qstring.#.#\" }],\n      [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, { token: \"string.delim\", switchTo: \"@qstring.$2.$2\" }],\n      [/(q|qw|tr|y)\\s+(\\w)/, { token: \"string.delim\", switchTo: \"@qstring.$2.$2\" }],\n      [/(qr|m|s)\\s*\\(/, { token: \"regexp.delim\", switchTo: \"@qregexp.(.)\" }],\n      [/(qr|m|s)\\s*\\[/, { token: \"regexp.delim\", switchTo: \"@qregexp.[.]\" }],\n      [/(qr|m|s)\\s*\\{/, { token: \"regexp.delim\", switchTo: \"@qregexp.{.}\" }],\n      [/(qr|m|s)\\s*</, { token: \"regexp.delim\", switchTo: \"@qregexp.<.>\" }],\n      [/(qr|m|s)#/, { token: \"regexp.delim\", switchTo: \"@qregexp.#.#\" }],\n      [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, { token: \"regexp.delim\", switchTo: \"@qregexp.$2.$2\" }],\n      [/(qr|m|s)\\s+(\\w)/, { token: \"regexp.delim\", switchTo: \"@qregexp.$2.$2\" }],\n      [/(qq|qx)\\s*\\(/, { token: \"string.delim\", switchTo: \"@qqstring.(.)\" }],\n      [/(qq|qx)\\s*\\[/, { token: \"string.delim\", switchTo: \"@qqstring.[.]\" }],\n      [/(qq|qx)\\s*\\{/, { token: \"string.delim\", switchTo: \"@qqstring.{.}\" }],\n      [/(qq|qx)\\s*</, { token: \"string.delim\", switchTo: \"@qqstring.<.>\" }],\n      [/(qq|qx)#/, { token: \"string.delim\", switchTo: \"@qqstring.#.#\" }],\n      [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, { token: \"string.delim\", switchTo: \"@qqstring.$2.$2\" }],\n      [/(qq|qx)\\s+(\\w)/, { token: \"string.delim\", switchTo: \"@qqstring.$2.$2\" }]\n    ],\n    // Non-expanded quoted string\n    // qstring<open>.<close>\n    //  open = open delimiter\n    //  close = close delimiter\n    qstring: [\n      [/\\\\./, \"string.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S3\": { token: \"string.delim\", next: \"@pop\" },\n            \"$#==$S2\": { token: \"string.delim\", next: \"@push\" },\n            // nested delimiters\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    // Quoted regexp\n    // qregexp.<open>.<close>\n    //  open = open delimiter\n    //  close = close delimiter\n    qregexp: [\n      { include: \"@variables\" },\n      [/\\\\./, \"regexp.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S3\": {\n              token: \"regexp.delim\",\n              next: \"@regexpModifiers\"\n            },\n            \"$#==$S2\": { token: \"regexp.delim\", next: \"@push\" },\n            // nested delimiters\n            \"@default\": \"regexp\"\n          }\n        }\n      ]\n    ],\n    regexpModifiers: [[/[msixpodualngcer]+/, { token: \"regexp.modifier\", next: \"@popall\" }]],\n    // Expanded quoted string\n    // qqstring.<open>.<close>\n    //  open = open delimiter\n    //  close = close delimiter\n    qqstring: [{ include: \"@variables\" }, { include: \"@qstring\" }],\n    heredoc: [\n      [/<<\\s*['\"`]?([\\w\\-]+)['\"`]?/, { token: \"string.heredoc.delimiter\", next: \"@heredocBody.$1\" }]\n    ],\n    heredocBody: [\n      [\n        /^([\\w\\-]+)$/,\n        {\n          cases: {\n            \"$1==$S2\": [\n              {\n                token: \"string.heredoc.delimiter\",\n                next: \"@popall\"\n              }\n            ],\n            \"@default\": \"string.heredoc\"\n          }\n        }\n      ],\n      [/./, \"string.heredoc\"]\n    ],\n    perldoc: [[/^=\\w/, \"comment.doc\", \"@perldocBody\"]],\n    perldocBody: [\n      [/^=cut\\b/, \"type.identifier\", \"@popall\"],\n      [/./, \"comment.doc\"]\n    ],\n    variables: [\n      [/\\$\\w+/, \"variable\"],\n      // scalar\n      [/@\\w+/, \"variable\"],\n      // array\n      [/%\\w+/, \"variable\"]\n      // key/value\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRegister","parcelRequire","$parcel$global","globalThis","register","module","exports","$e060f23beb8b9419$export$c83be1687c028fc9","$e060f23beb8b9419$export$789c912f57fe164c","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","token","keywords","builtinFunctions","builtinFileHandlers","builtinVariables","symbols","quoteLikeOps","escapes","tokenizer","root","include","cases","next","whitespace","numbers","strings","stringBody","dblStrings","dblStringBody","quotedConstructs","switchTo","qstring","qregexp","regexpModifiers","qqstring","heredoc","heredocBody","perldoc","perldocBody","variables"],"version":3,"file":"perl.6a9e425c.js.map"}